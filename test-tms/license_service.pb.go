// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.5.1
// source: license_service.proto

package tms_proto_licensing

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CheckLicenseResponse_LicenseStatus int32

const (
	CheckLicenseResponse_UNKNOWN  CheckLicenseResponse_LicenseStatus = 0
	CheckLicenseResponse_INACTIVE CheckLicenseResponse_LicenseStatus = 1
	CheckLicenseResponse_EXPIRED  CheckLicenseResponse_LicenseStatus = 2
	CheckLicenseResponse_VALID    CheckLicenseResponse_LicenseStatus = 3
	CheckLicenseResponse_INVALID  CheckLicenseResponse_LicenseStatus = 4
)

// Enum value maps for CheckLicenseResponse_LicenseStatus.
var (
	CheckLicenseResponse_LicenseStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "INACTIVE",
		2: "EXPIRED",
		3: "VALID",
		4: "INVALID",
	}
	CheckLicenseResponse_LicenseStatus_value = map[string]int32{
		"UNKNOWN":  0,
		"INACTIVE": 1,
		"EXPIRED":  2,
		"VALID":    3,
		"INVALID":  4,
	}
)

func (x CheckLicenseResponse_LicenseStatus) Enum() *CheckLicenseResponse_LicenseStatus {
	p := new(CheckLicenseResponse_LicenseStatus)
	*p = x
	return p
}

func (x CheckLicenseResponse_LicenseStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CheckLicenseResponse_LicenseStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_license_service_proto_enumTypes[0].Descriptor()
}

func (CheckLicenseResponse_LicenseStatus) Type() protoreflect.EnumType {
	return &file_license_service_proto_enumTypes[0]
}

func (x CheckLicenseResponse_LicenseStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CheckLicenseResponse_LicenseStatus.Descriptor instead.
func (CheckLicenseResponse_LicenseStatus) EnumDescriptor() ([]byte, []int) {
	return file_license_service_proto_rawDescGZIP(), []int{1, 0}
}

type LicenseStatusResponse_LicenseStatus int32

const (
	LicenseStatusResponse_NO_LICENSE LicenseStatusResponse_LicenseStatus = 0
	LicenseStatusResponse_EXPIRED    LicenseStatusResponse_LicenseStatus = 1
	LicenseStatusResponse_WARNING    LicenseStatusResponse_LicenseStatus = 2
	LicenseStatusResponse_ACTIVE     LicenseStatusResponse_LicenseStatus = 3
)

// Enum value maps for LicenseStatusResponse_LicenseStatus.
var (
	LicenseStatusResponse_LicenseStatus_name = map[int32]string{
		0: "NO_LICENSE",
		1: "EXPIRED",
		2: "WARNING",
		3: "ACTIVE",
	}
	LicenseStatusResponse_LicenseStatus_value = map[string]int32{
		"NO_LICENSE": 0,
		"EXPIRED":    1,
		"WARNING":    2,
		"ACTIVE":     3,
	}
)

func (x LicenseStatusResponse_LicenseStatus) Enum() *LicenseStatusResponse_LicenseStatus {
	p := new(LicenseStatusResponse_LicenseStatus)
	*p = x
	return p
}

func (x LicenseStatusResponse_LicenseStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LicenseStatusResponse_LicenseStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_license_service_proto_enumTypes[1].Descriptor()
}

func (LicenseStatusResponse_LicenseStatus) Type() protoreflect.EnumType {
	return &file_license_service_proto_enumTypes[1]
}

func (x LicenseStatusResponse_LicenseStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LicenseStatusResponse_LicenseStatus.Descriptor instead.
func (LicenseStatusResponse_LicenseStatus) EnumDescriptor() ([]byte, []int) {
	return file_license_service_proto_rawDescGZIP(), []int{3, 0}
}

type CheckLicenseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AtmId      string `protobuf:"bytes,1,opt,name=atm_id,json=atmId,proto3" json:"atm_id,omitempty"`
	CustomerId string `protobuf:"bytes,2,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
}

func (x *CheckLicenseRequest) Reset() {
	*x = CheckLicenseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_license_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckLicenseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckLicenseRequest) ProtoMessage() {}

func (x *CheckLicenseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_license_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckLicenseRequest.ProtoReflect.Descriptor instead.
func (*CheckLicenseRequest) Descriptor() ([]byte, []int) {
	return file_license_service_proto_rawDescGZIP(), []int{0}
}

func (x *CheckLicenseRequest) GetAtmId() string {
	if x != nil {
		return x.AtmId
	}
	return ""
}

func (x *CheckLicenseRequest) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

type CheckLicenseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status CheckLicenseResponse_LicenseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=com.tmsatmsoftware.server.licensing.CheckLicenseResponse_LicenseStatus" json:"status,omitempty"`
}

func (x *CheckLicenseResponse) Reset() {
	*x = CheckLicenseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_license_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckLicenseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckLicenseResponse) ProtoMessage() {}

func (x *CheckLicenseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_license_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckLicenseResponse.ProtoReflect.Descriptor instead.
func (*CheckLicenseResponse) Descriptor() ([]byte, []int) {
	return file_license_service_proto_rawDescGZIP(), []int{1}
}

func (x *CheckLicenseResponse) GetStatus() CheckLicenseResponse_LicenseStatus {
	if x != nil {
		return x.Status
	}
	return CheckLicenseResponse_UNKNOWN
}

type LicenseStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AtmId      string `protobuf:"bytes,1,opt,name=atm_id,json=atmId,proto3" json:"atm_id,omitempty"`
	CustomerId string `protobuf:"bytes,2,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
}

func (x *LicenseStatusRequest) Reset() {
	*x = LicenseStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_license_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LicenseStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LicenseStatusRequest) ProtoMessage() {}

func (x *LicenseStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_license_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LicenseStatusRequest.ProtoReflect.Descriptor instead.
func (*LicenseStatusRequest) Descriptor() ([]byte, []int) {
	return file_license_service_proto_rawDescGZIP(), []int{2}
}

func (x *LicenseStatusRequest) GetAtmId() string {
	if x != nil {
		return x.AtmId
	}
	return ""
}

func (x *LicenseStatusRequest) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

type LicenseStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status LicenseStatusResponse_LicenseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=com.tmsatmsoftware.server.licensing.LicenseStatusResponse_LicenseStatus" json:"status,omitempty"`
}

func (x *LicenseStatusResponse) Reset() {
	*x = LicenseStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_license_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LicenseStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LicenseStatusResponse) ProtoMessage() {}

func (x *LicenseStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_license_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LicenseStatusResponse.ProtoReflect.Descriptor instead.
func (*LicenseStatusResponse) Descriptor() ([]byte, []int) {
	return file_license_service_proto_rawDescGZIP(), []int{3}
}

func (x *LicenseStatusResponse) GetStatus() LicenseStatusResponse_LicenseStatus {
	if x != nil {
		return x.Status
	}
	return LicenseStatusResponse_NO_LICENSE
}

var File_license_service_proto protoreflect.FileDescriptor

var file_license_service_proto_rawDesc = []byte{
	0x0a, 0x15, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x23, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x6d, 0x73,
	0x61, 0x74, 0x6d, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x69, 0x6e, 0x67, 0x22, 0x4d, 0x0a, 0x13,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x74, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x74, 0x6d, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x22, 0xc8, 0x01, 0x0a, 0x14,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x47, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x6d, 0x73, 0x61, 0x74,
	0x6d, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4f, 0x0a, 0x0d, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x4e, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10,
	0x01, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x02, 0x12, 0x09,
	0x0a, 0x05, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x10, 0x04, 0x22, 0x4e, 0x0a, 0x14, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15,
	0x0a, 0x06, 0x61, 0x74, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x74, 0x6d, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x22, 0xc0, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x63, 0x65, 0x6e,
	0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x60, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x48, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x6d, 0x73, 0x61, 0x74, 0x6d, 0x73, 0x6f, 0x66,
	0x74, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x6c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x45, 0x0a, 0x0d, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x4f, 0x5f, 0x4c, 0x49, 0x43, 0x45, 0x4e, 0x53,
	0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x01,
	0x12, 0x0b, 0x0a, 0x07, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0a, 0x0a,
	0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x03, 0x32, 0x9f, 0x02, 0x0a, 0x0e, 0x4c, 0x69,
	0x63, 0x65, 0x6e, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x85, 0x01, 0x0a,
	0x0c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x6d, 0x73, 0x61, 0x74, 0x6d, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73,
	0x69, 0x6e, 0x67, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x6d,
	0x73, 0x61, 0x74, 0x6d, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x84, 0x01, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x39, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x6d, 0x73, 0x61, 0x74, 0x6d, 0x73,
	0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x6c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x6d, 0x73, 0x61, 0x74, 0x6d, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73,
	0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3c, 0x0a, 0x23, 0x63,
	0x6f, 0x6d, 0x2e, 0x74, 0x6d, 0x73, 0x61, 0x74, 0x6d, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72,
	0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x69,
	0x6e, 0x67, 0x50, 0x01, 0x5a, 0x13, 0x74, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_license_service_proto_rawDescOnce sync.Once
	file_license_service_proto_rawDescData = file_license_service_proto_rawDesc
)

func file_license_service_proto_rawDescGZIP() []byte {
	file_license_service_proto_rawDescOnce.Do(func() {
		file_license_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_license_service_proto_rawDescData)
	})
	return file_license_service_proto_rawDescData
}

var file_license_service_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_license_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_license_service_proto_goTypes = []interface{}{
	(CheckLicenseResponse_LicenseStatus)(0),  // 0: com.tmsatmsoftware.server.licensing.CheckLicenseResponse.LicenseStatus
	(LicenseStatusResponse_LicenseStatus)(0), // 1: com.tmsatmsoftware.server.licensing.LicenseStatusResponse.LicenseStatus
	(*CheckLicenseRequest)(nil),              // 2: com.tmsatmsoftware.server.licensing.CheckLicenseRequest
	(*CheckLicenseResponse)(nil),             // 3: com.tmsatmsoftware.server.licensing.CheckLicenseResponse
	(*LicenseStatusRequest)(nil),             // 4: com.tmsatmsoftware.server.licensing.LicenseStatusRequest
	(*LicenseStatusResponse)(nil),            // 5: com.tmsatmsoftware.server.licensing.LicenseStatusResponse
}
var file_license_service_proto_depIdxs = []int32{
	0, // 0: com.tmsatmsoftware.server.licensing.CheckLicenseResponse.status:type_name -> com.tmsatmsoftware.server.licensing.CheckLicenseResponse.LicenseStatus
	1, // 1: com.tmsatmsoftware.server.licensing.LicenseStatusResponse.status:type_name -> com.tmsatmsoftware.server.licensing.LicenseStatusResponse.LicenseStatus
	2, // 2: com.tmsatmsoftware.server.licensing.LicenseService.CheckLicense:input_type -> com.tmsatmsoftware.server.licensing.CheckLicenseRequest
	4, // 3: com.tmsatmsoftware.server.licensing.LicenseService.GetStatus:input_type -> com.tmsatmsoftware.server.licensing.LicenseStatusRequest
	3, // 4: com.tmsatmsoftware.server.licensing.LicenseService.CheckLicense:output_type -> com.tmsatmsoftware.server.licensing.CheckLicenseResponse
	5, // 5: com.tmsatmsoftware.server.licensing.LicenseService.GetStatus:output_type -> com.tmsatmsoftware.server.licensing.LicenseStatusResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_license_service_proto_init() }
func file_license_service_proto_init() {
	if File_license_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_license_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckLicenseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_license_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckLicenseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_license_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LicenseStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_license_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LicenseStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_license_service_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_license_service_proto_goTypes,
		DependencyIndexes: file_license_service_proto_depIdxs,
		EnumInfos:         file_license_service_proto_enumTypes,
		MessageInfos:      file_license_service_proto_msgTypes,
	}.Build()
	File_license_service_proto = out.File
	file_license_service_proto_rawDesc = nil
	file_license_service_proto_goTypes = nil
	file_license_service_proto_depIdxs = nil
}
